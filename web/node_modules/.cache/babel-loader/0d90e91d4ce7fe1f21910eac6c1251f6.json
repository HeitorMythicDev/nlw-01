{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heito\\\\Documents\\\\nextlevelweek\\\\aulas\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport axios from 'axios';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\"; //array ou objeto: manualmente informar o tipo da variÃ¡vel\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latidute, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = {\n      name,\n      email,\n      whatsapp,\n      uf,\n      city,\n      latidute,\n      longitude,\n      items\n    };\n    await api.post('points', data);\n    alert('Ponto de Coleta criado!');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"Nome da Entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: handleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, \"Selecione um ou mais itens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 29\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 1\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/Users/heito/Documents/nextlevelweek/aulas/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","Map","TileLayer","Marker","api","axios","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","initialPosition","setInitialPosition","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItems","setSelectedItems","selectedPosition","setSelectedPosition","formData","setFormData","name","email","whatsapp","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUf","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","latidute","post","alert","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React,{useEffect,useState,ChangeEvent,FormEvent} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {FiArrowLeft} from 'react-icons/fi';\r\nimport {Map,TileLayer,Marker} from 'react-leaflet';\r\nimport api from '../../services/api'\r\nimport axios from 'axios';\r\nimport {LeafletMouseEvent} from 'leaflet';\r\n\r\nimport './styles.css';\r\n\r\nimport logo from '../../assets/logo.svg';\r\n\r\n//array ou objeto: manualmente informar o tipo da variÃ¡vel\r\n\r\ninterface Item{\r\n\r\n    id:number;\r\n    title:string;\r\n    image_url:string;\r\n}\r\n\r\ninterface IBGEUFResponse{\r\nsigla:string;\r\n\r\n}\r\n\r\ninterface IBGECityResponse{\r\n    nome:string;\r\n    \r\n    }\r\n\r\nconst CreatePoint = () => {\r\n\r\nconst [items,setItems] = useState<Item[]>([]);\r\nconst [ufs,setUfs] = useState<string[]>([]);\r\nconst [cities,setCities] = useState<string[]>([]);\r\n\r\nconst [initialPosition,setInitialPosition] = useState<[number,number]>([0,0]);\r\n\r\nconst [selectedUf,setSelectedUf] = useState('0');\r\nconst [selectedCity,setSelectedCity] = useState('0');\r\nconst [selectedItems,setSelectedItems] = useState<number[]>([]);\r\nconst [selectedPosition,setSelectedPosition] = useState<[number,number]>([0,0]);\r\n\r\nconst [formData,setFormData] = useState({\r\nname:'',\r\nemail:'',\r\nwhatsapp:'',\r\n\r\n});\r\n\r\n\r\nuseEffect(() => {\r\n  navigator.geolocation.getCurrentPosition(position => {\r\n\r\n    const {latitude,longitude} = position.coords;\r\n    setInitialPosition([latitude,longitude]);\r\n\r\n  } );\r\n    \r\n    },[]);\r\n\r\n    useEffect(() => {\r\napi.get('items').then( response => {\r\n    setItems(response.data);\r\n})\r\n\r\n},[]);\r\n\r\nuseEffect(() => {\r\n    axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then( response => {\r\n\r\n    const ufInitials = response.data.map(uf => uf.sigla);\r\n    setUfs(ufInitials);\r\n        \r\n    })\r\n    \r\n    },[]);\r\n\r\n    useEffect(() => {\r\n\r\n      if(selectedUf === '0'){\r\n          return;            \r\n        }\r\n        axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\r\n        .then( response => {\r\n            const cityNames = response.data.map(city => city.nome);\r\n            setCities(cityNames);        \r\n        })\r\n    },[selectedUf]);\r\n\r\n\r\n    function handleSelectUf(event: ChangeEvent<HTMLSelectElement>){\r\n        const uf =  event.target.value;\r\n        setSelectedUf(uf);\r\n\r\n    }\r\n\r\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>){\r\n        const city =  event.target.value;\r\n        setSelectedCity(city);\r\n\r\n     }\r\n\r\n     function handleMapClick(event : LeafletMouseEvent){\r\n        setSelectedPosition([\r\n        event.latlng.lat,\r\n        event.latlng.lng\r\n])}\r\n\r\nfunction handleInputChange(event: ChangeEvent<HTMLInputElement>){\r\n    const {name,value} = event.target;\r\n\r\n        setFormData({...formData,[name]: value});\r\n\r\n }\r\n\r\n function handleSelectItem(id: number){\r\n\r\n    const alreadySelected = selectedItems.findIndex(item => item === id);\r\n\r\n    if(alreadySelected >=0) {\r\n       const filteredItems = selectedItems.filter(item => item !== id );\r\n       setSelectedItems(filteredItems);\r\n    }\r\n    else{\r\n       setSelectedItems([...selectedItems,id]);\r\n    }\r\n }\r\n\r\n async function handleSubmit(event : FormEvent){\r\n     event.preventDefault();\r\n     const {name,email,whatsapp} = formData;\r\n     const uf = selectedUf;\r\n     const city = selectedCity;\r\n     const [latidute,longitude] = selectedPosition;\r\n     const items = selectedItems;\r\n\r\n     const data={\r\n         name,\r\n         email,\r\n         whatsapp,\r\n         uf,\r\n         city,\r\n         latidute,\r\n         longitude,\r\n         items\r\n     };\r\n\r\n    await api.post('points',data);\r\n\r\n    alert('Ponto de Coleta criado!');\r\n\r\n }\r\n\r\n    return (\r\n        <div id=\"page-create-point\">\r\n            <header>\r\n                <img src={logo} alt=\"Ecoleta\"/>\r\n                <Link to=\"/\">\r\n                    <FiArrowLeft/>\r\n                Voltar para home\r\n                </Link>\r\n            </header>\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Cadastro do <br/> ponto de coleta</h1>\r\n                <fieldset>\r\n                    <legend><h2>Dados</h2>\r\n                    </legend>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome da Entidade</label>\r\n                        <input\r\n                         type=\"text\"\r\n                         name=\"name\"\r\n                         id=\"name\"\r\n                         onChange={handleInputChange}                        \r\n                        />\r\n                    </div>\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                            <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            onChange={handleInputChange}                              \r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n                            <input\r\n                            type=\"text\"\r\n                            name=\"whatsapp\"\r\n                            id=\"whatsapp\" \r\n                            onChange={handleInputChange}                             \r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </fieldset>\r\n\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>EndereÃ§o</h2>\r\n                        <span>Selecione o endereÃ§o no mapa</span>\r\n                    </legend>\r\n\r\n                    {/* <Map center={[-27.2092052,-49.6401092]} zoom={15} onClick={handleMapClick}> */}\r\n                    <Map center={initialPosition} zoom={15} onClick={handleMapClick}>   \r\n                    <TileLayer\r\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={selectedPosition}></Marker>\r\n                    </Map>\r\n\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                    <label htmlFor=\"uf\">Estado (UF)</label>\r\n                    <select\r\n                     name=\"uf\"\r\n                      id=\"uf\"\r\n                       value={selectedUf}\r\n                        onChange={handleSelectUf}\r\n                        >\r\n                        <option value=\"0\">Selecione uma UF</option>\r\n                        {ufs.map(uf =>(\r\n\r\n                            <option key={uf} value={uf}>{uf}</option>\r\n                        ))}\r\n\r\n                    </select>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                    <label htmlFor=\"city\">Cidade</label>\r\n                    <select\r\n                     name=\"city\"\r\n                      id=\"city\"\r\n                      value={selectedCity}\r\n                      onChange={handleSelectCity}\r\n                      >\r\n                        <option value=\"0\">Selecione uma cidade</option>\r\n                        {cities.map(city =>(\r\n\r\n                        <option key={city} value={city}>{city}</option>\r\n                        ))}\r\n                    </select>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend><h2>Ãtens de coleta</h2>\r\n                    <span>Selecione um ou mais itens abaixo</span>\r\n                    </legend>\r\n                    <ul className=\"items-grid\">\r\n                        {items.map(item => (\r\n                        <li \r\n                        key={item.id} \r\n                        onClick={ () => handleSelectItem(item.id)}\r\n                        className={selectedItems.includes(item.id) ? 'selected': ''}                        \r\n                        >\r\n                            <img src={item.image_url} alt={item.title}></img>\r\n                            <span>{item.title}</span>\r\n                        </li>\r\n\r\n                        ) )}                 \r\n                     \r\n                    </ul>\r\n                </fieldset>\r\n\r\n<button type=\"submit\">\r\n    Cadastrar ponto de coleta\r\n</button>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default CreatePoint; "]},"metadata":{},"sourceType":"module"}